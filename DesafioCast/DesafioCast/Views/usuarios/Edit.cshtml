@model DesafioCast.Models.usuario



<h2>Logar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">



   

    <div class="jumbotron">

      


            <div class="form-group">
      
                <div class="col-md-10">
                    Login
                    @Html.EditorFor(model => model.nomeusuario, new { htmlAttributes = new { @class = "" } })
                    @Html.ValidationMessageFor(model => model.nomeusuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                <div class="col-md-10">
                    Senha
                    @Html.PasswordFor(model => model.senha, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.senha, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Login" class="btn btn-success" />

                    @Html.ActionLink("Registrar", "Create")

                </div>

                <div class="col-md-offset-2 col-md-10">
               
                </div>

            </div>
        </div>

    </div>


}

<div>
   
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
